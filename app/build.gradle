apply plugin: 'com.android.application'
apply plugin: 'android-apt'
//add this for picasso
repositories {
    mavenCentral()
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "com.example.yasuaki.movieseeker"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'OPEN_MOVIE_DB_API_KEY', OpenMovieDbApiKey
    }
}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '25.1.0'
    final HAMCREST_VERSION = '1.3'
    final DEXMAKER_VERSION = '1.2'
    final JUNIT_VERSION = '4.12'
    final MOCKITO_VERSION = '1.10.19'
    final RUNNER_VERSION = '0.5'
    final ESPRESSO_VERSION = '2.2.2'
    final DAGGER_VERSION = '2.5'
    final UI_AUTOMATOR_VERSION = '2.1.2'
    final CONSTRAINT_LAYOUT_VERSION = '1.0.0-beta4'
    final STETHO_VERSION = '1.4.2'

    final RETROFIT2_VERSION = '2.1.0'
    final OKHTTP_VERSION = '3.4.1'
    final PICASSO_VERSION = '2.5.2'

    final BUTTERKNIFE_VERSION = '8.4.0'
    final GSON_VERSION = '2.6.2'

    final RXANDROID_VERSION = '1.2.1'
    final RXJAVA_VERSION = '1.1.6'
    final SQLBRITE_VERSION = '1.1.1'

    final PLAY_SERVICES_VERSION = '8.4.0'

    // App's dependencies, including test
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:preference-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support.test.espresso:espresso-idling-resource:$ESPRESSO_VERSION"

    //constraint layout
    compile "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"

    compile "com.facebook.stetho:stetho:$STETHO_VERSION"
    compile "com.facebook.stetho:stetho-okhttp3:$STETHO_VERSION"

    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile("com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Dependencies for local unit tests
    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile "org.mockito:mockito-all:$MOCKITO_VERSION"
    testCompile "org.hamcrest:hamcrest-all:$HAMCREST_VERSION"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"

    // Dependencies for Android unit tests
    androidTestCompile "junit:junit:$JUNIT_VERSION"
    androidTestCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    androidTestCompile "com.google.dexmaker:dexmaker:$DEXMAKER_VERSION"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$DEXMAKER_VERSION"

    // Espresso UI Testing
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$ESPRESSO_VERSION"

    //Dagger for dependency injection
    apt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compile "com.google.dagger:dagger:$DAGGER_VERSION"

    // Resolve conflicts between main and test APK:
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"

    // gson, retrofit, okhttp, picasso
    compile "com.google.code.gson:gson:$GSON_VERSION"

    compile "com.squareup.retrofit2:retrofit:$RETROFIT2_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT2_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT2_VERSION"
    compile "com.squareup.retrofit2:converter-scalars:$RETROFIT2_VERSION"

    compile "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"

    compile "com.squareup.picasso:picasso:$PICASSO_VERSION"

    // rx, sqlbrite, butterknife
    compile "io.reactivex:rxandroid:$RXANDROID_VERSION"
    compile "io.reactivex:rxjava:$RXJAVA_VERSION"
    compile "com.squareup.sqlbrite:sqlbrite:$SQLBRITE_VERSION"
    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    apt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"
}
